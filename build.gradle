/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'baseerkhan' at '1/28/15 12:21 PM' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin:'application'

sourceCompatibility = 1.7
version = '1.0.0'
mainClassName = "com.atomiton.smartparking.SmartParking"

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Smart Parking Hello World',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    maven {
	url "https://repo.maven.apache.org/maven2"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile ([group: 'org.json', name:'json', version: '20131018'])
    compile ([group: 'org.slf4j', name:'slf4j-api', version: '1.7.7'])
    compile ([group: 'commons-io', name:'commons-io', version: '2.4'])
    compile ([group: 'commons-cli', name:'commons-cli', version: '1.2'])
    compile ([group: 'org.eclipse.jetty.websocket', name:'websocket-client', version: '9.2.7.v20150116'])
    compile ([group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'])
    compile ([group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'])
    compile ([group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.5.0'])
    compile ([group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.2'])
    compile ([group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'])
    

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
